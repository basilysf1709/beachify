"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _axios = _interopRequireDefault(require("axios"));

var _Cache = _interopRequireDefault(require("./Cache.cjs"));

var _jsLogger = _interopRequireDefault(require("js-logger"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const sync = (async () => {
  // http://time.google.com:80 doesn't actually give us an NTP response, instead it returns
  // a 302 redirected response. However, it does contain a `date` header which we can use.
  try {
    const response = await _axios.default.get("http://time.google.com", {
      maxRedirects: 0,
      // By default a status of 302 is considered an erring status
      validateStatus: function (status) {
        return status < 500;
      }
    });
    const currentTime = Math.round(Date.now() / 1000); // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date
    // strongly discourages us using `Date.parse()`, but I'm not sure what we should replace
    // it with without adding any new deps.
    //
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access

    const worldTime = Math.round(Date.parse(response.headers.date) / 1000);
    _Cache.default.timeDrift = worldTime - currentTime;
  } catch (error) {
    _jsLogger.default.debug(`Failed to sync time drift: ${
    /** @type {Error} */
    error.toString()}`);
  }
})();

var _default = sync;
exports.default = _default;